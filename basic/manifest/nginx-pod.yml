apiVersion: v1
kind: Pod
metadata: 
  name: nginx-pod # 팟의 이름, namespace 내에서 고유해야 함
spec: # 팟의 스펙을 정의
  containers:
  - name: nginx-container # 컨테이너의 이름
    image: nginx # 컨테이너의 이미지
    # ports: # 컨테이너가 노출하는 포트목록을 정의
    # - containerPort: 80
    
    # resources: # 컨테이너의 리소스 요청과 제한을 정의
    #   requests: # 컨테이너가 요청하는 리소스의 양을 정의
    #     memory: "64Mi"
    #     cpu: "250m"
    #   limits: # 컨테이너가 사용할 수 있는 리소스의 상한선을 정의
    #     memory: "128Mi"
    #     cpu: "500m"

    # livenessProbe: # 컨테이너의 상태를 확인하는 방법을 정의
    #   httpGet: # HTTP GET 요청을 보내어 응답을 확인
    # readinessProbe: # 컨테이너가 준비 상태인지 확인하는 방법을 정의
    #   httpGet: # HTTP GET 요청을 보내어 응답을 확인

    # volumrMounts: # 파드에 정의한 볼륨을 컨테이너의 파일 시스템에 마운트하는 과정. 복수 지정 가능
    # - name: nginx-persistent-storage
    #   mountPath: /usr/share/nginx/html

    # env: # 컨테이너에 환경 변수를 설정
    # - name: ENVIRONMENT
    #   value: production

    # command: # 컨테이너가 실행할 명령어를 정의. args가 인자로 작용
    # - "sh"
    # - "-c"
    # - "echo Hello Kubernetes!"

    # args: # command의 실행인자
    # - "Hello Kubernetes!"

  # initContainers:  # 초기화 전용 컨테이너의 사양을 배열로 기술. 초기화 컨테이너는 모두 실행 완료되어야 다음 단계로 진행
  # nodeSelector: # 노드 선택자를 사용하여 특정 노드에 팟을 배치=파드가 배포될 노드의 레이블을 지정
  # volumes: # 볼륨을 정의하여 파드 내 컨테이너 간에 공유할 수 있는 저장소 설정
